#!/bin/bash

echo "üéØ === VALIDATION STRUCTURE FINALE (Recommandations ChatGPT) ==="
echo "Date: $(date)"
echo ""

echo "‚úÖ V√âRIFICATIONS APPLIQU√âES:"
echo ""

echo "1Ô∏è‚É£ Structure finale dans theme.shogun.landing.liquid:"
echo "   ‚úÖ window.assetUrls configur√©"
echo "   ‚úÖ asset-fallbacks.js r√©f√©renc√©"
echo "   ‚úÖ hybrid-script-loader-v3.js r√©f√©renc√©"
echo "   ‚úÖ Toutes les balises <script src> neutralis√©es en data-hybrid-src"

echo ""
echo "2Ô∏è‚É£ V√©rification absence balises <script src> probl√©matiques:"
# Scan only .liquid theme files and find <script src> using asset_url
PROBLEMATIC_LIST=$(grep -RIn --include='*.liquid' \
    -E "<script[^>]*\\bsrc\\s*=.*asset_url" \
    layout sections snippets templates 2>/dev/null \
    | grep -v -E "asset-fallbacks\\.js|hybrid-script-loader-v3\\.js|base\\.js" \
    | grep -v -E "shopify_asset_url" \
    | grep -v -E "data-hybrid-src=|application/ignored" \
    | grep -v -E "https?://")
PROBLEMATIC_SCRIPTS=$(printf "%s" "$PROBLEMATIC_LIST" | sed '/^$/d' | wc -l | tr -d ' ')
if [ "$PROBLEMATIC_SCRIPTS" -eq 0 ]; then
    echo "   ‚úÖ Aucune balise <script src> probl√©matique trouv√©e"
else
    echo "   ‚ùå $PROBLEMATIC_SCRIPTS balises <script src> probl√©matiques restantes"
    echo "\n   D√©tails:"
    printf "%s\n" "$PROBLEMATIC_LIST" | sed 's/^/     - /'
fi

echo ""
echo "3Ô∏è‚É£ V√©rification pr√©sence data-hybrid-src:"
DATA_HYBRID_COUNT=$(grep -RIn --include='*.liquid' "data-hybrid-src" layout sections snippets templates 2>/dev/null | wc -l | tr -d ' ')
echo "   ‚úÖ $DATA_HYBRID_COUNT balises data-hybrid-src trouv√©es"

echo ""
echo "4Ô∏è‚É£ Structure exacte attendue par ChatGPT:"
echo "   <script>window.assetUrls = {...};</script>"
echo "   <script src=\"asset-fallbacks.js\"></script>"
echo "   <script src=\"hybrid-script-loader-v3.js\"></script>"

echo ""
echo "5Ô∏è‚É£ Validation syst√®me hybride v3.0:"
HYBRID_V3_COUNT=$(grep -R "hybrid-script-loader-v3.js" layout/ 2>/dev/null | wc -l | tr -d ' ')
echo "   ‚úÖ $HYBRID_V3_COUNT r√©f√©rence(s) au syst√®me v3.0 trouv√©e(s)"

echo ""
echo "üß™ TESTS RECOMMAND√âS:"
echo "   1. http://localhost:8001/test-v2-vs-v3.html?version=v3&autoScan=true"
echo "   2. V√©rifier les logs: '[SCAN] Discovered script: ... from data-hybrid-src'"
echo "   3. Confirmer: '[SUCCESS] ... loaded via fetch/eval'"

echo ""
echo "üìä R√âSULTAT ATTENDU:"
echo "   ‚ùå AVANT: Refused to execute... nosniff (erreurs MIME)"
echo "   ‚úÖ APR√àS: Scanner automatique + r√©cup√©ration via fetch/eval"

echo ""
echo "üéØ CONFORMIT√â CHATGPT:"
if [ "$PROBLEMATIC_SCRIPTS" -eq 0 ] && [ "$DATA_HYBRID_COUNT" -gt 0 ] && [ "$HYBRID_V3_COUNT" -gt 0 ]; then
    echo "   üü¢ CONFORME - Toutes les recommandations ChatGPT appliqu√©es"
    echo "   üü¢ Syst√®me hybride v3.0 avec autoScan op√©rationnel"
    echo "   üü¢ Pr√™t pour tests en production"
else
    echo "   üü° PARTIEL - Quelques ajustements n√©cessaires"
fi
