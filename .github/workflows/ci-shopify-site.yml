name: CI Shopify Site

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy_only:
        description: "D√©ployer seulement sans tests"
        required: false
        default: false
        type: boolean

jobs:
  # === Basic build ===
  basic-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Node.js setup
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: echo "‚úÖ Build OK"

  # === Smoke tests (add-to-cart + PSI) ===
  smoke-tests:
    runs-on: ubuntu-latest
    needs: basic-build
    env:
      SITE_ORIGIN: ${{ secrets.SHOPIFY_STORE }}
      GOOGLE_PSI_API_KEY: ${{ secrets.GOOGLE_PSI_API_KEY }}
      VARIANT_ID_1: ${{ secrets.VARIANT_ID_1 }}
      VARIANT_ID_2: ${{ secrets.VARIANT_ID_2 }}
      VARIANT_ID_3: ${{ secrets.VARIANT_ID_3 }}
    steps:
      - uses: actions/checkout@v4
      - name: Install jq + curl
        run: sudo apt-get update && sudo apt-get install -y jq curl
      - name: Test add-to-cart
        run: |
          for id in "$VARIANT_ID_1" "$VARIANT_ID_2" "$VARIANT_ID_3"; do
            [ -n "$id" ] || continue
            echo "üõí Testing variant $id"
            code=$(curl -sS -X POST \
              -H "Content-Type: application/json" \
              --data "{\"id\":$id,\"quantity\":1}" \
              "$SITE_ORIGIN/cart/add.js" \
              -o /dev/null -w '%{http_code}')
            [ "$code" = "200" ] || { echo "‚ùå Add-to-cart failed for $id"; exit 1; }
          done
      - name: PageSpeed Insights (Home)
        if: env.GOOGLE_PSI_API_KEY != ''
        run: |
          curl -sS "https://www.googleapis.com/pagespeedonline/v5/runPagespeed?url=$SITE_ORIGIN&strategy=mobile&key=$GOOGLE_PSI_API_KEY" | jq .

  # === Job API Admin ===
  api-admin:
    runs-on: ubuntu-latest
    needs: smoke-tests
    env:
      SHOPIFY_ADMIN_TOKEN: ${{ secrets.SHOPIFY_ADMIN_TOKEN }}
      SHOPIFY_STORE: ${{ secrets.SHOPIFY_STORE }}
    steps:
      - uses: actions/checkout@v4
      - name: V√©rifier acc√®s API Admin
        run: |
          curl -sS -H "X-Shopify-Access-Token: $SHOPIFY_ADMIN_TOKEN" \
            "https://$SHOPIFY_STORE/admin/api/2025-07/shop.json" | jq .

  # === [OPTION] Backup du th√®me avant d√©ploiement =================
  theme-backup:
    needs: api-admin
    runs-on: ubuntu-latest
    if: ${{ secrets.ENABLE_THEME_BACKUP == 'true' && !(github.event_name == 'workflow_dispatch' && inputs.deploy_only == true) }}
    env:
      SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE }}
      SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
      THEME_ID: ${{ secrets.THEME_ID }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Shopify CLI
        run: npm i -g @shopify/cli @shopify/theme
      - name: Create dated backup
        run: |
          [ -n "${THEME_ID:-}" ] || { echo "‚ùå THEME_ID manquant"; exit 1; }
          BACKUP_NAME="backup-$(date +'%Y%m%d-%H%M%S')"
          echo "‚û°Ô∏è Backup du th√®me $THEME_ID ‚Üí $BACKUP_NAME"
          shopify theme pull --theme-id "$THEME_ID" --path "$BACKUP_NAME"
          echo "‚úÖ Backup OK : $BACKUP_NAME"
      - name: Upload backup as artifact
        uses: actions/upload-artifact@v4
        with:
          name: theme-backup-${{ env.THEME_ID }}
          path: ${{ github.workspace }}/$BACKUP_NAME

  # === D√©ploiement auto (ne d√©marre qu'apr√®s backup si activ√©) ===
  theme-deploy:
    needs: [ api-admin ]
    if: ${{ github.ref == 'refs/heads/main' && secrets.ENABLE_THEME_DEPLOY == 'true' }}
    runs-on: ubuntu-latest
    env:
      SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE }}
      SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
      THEME_ID: ${{ secrets.THEME_ID }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Shopify CLI
        run: npm i -g @shopify/cli @shopify/theme
      - name: Push theme
        run: shopify theme push --theme-id "$THEME_ID" --force
