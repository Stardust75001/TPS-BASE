name: CI Shopify Site

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:
    inputs:
      deploy_only:
        description: "Ne lancer que le déploiement (skip build/tests)"
        required: false
        default: false
        type: boolean

jobs:
  # === Build basique (lint, install) ===
  basic-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: |
          npm install

  # === Smoke tests (cart + PSI) ===
  smoke-tests:
    needs: basic-build
    runs-on: ubuntu-latest
    env:
      SITE_ORIGIN: https://${{ secrets.SHOPIFY_STORE }}
      VARIANT_ID_1: ${{ secrets.VARIANT_ID_1 }}
      VARIANT_ID_2: ${{ secrets.VARIANT_ID_2 }}
      VARIANT_ID_3: ${{ secrets.VARIANT_ID_3 }}
      GOOGLE_PSI_API_KEY: ${{ secrets.GOOGLE_PSI_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - name: Run smoke tests
        run: bash ./load-env.sh all

  # === Theme check (obligatoire pour protected branch) ===
  theme-check:
    needs: smoke-tests
    runs-on: ubuntu-latest
    env:
      SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE }}
      SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - run: |
          npm i -g @shopify/cli @shopify/theme
          shopify theme check || true

  # === API Admin test (GET shop infos) ===
  api-admin:
    needs: theme-check
    runs-on: ubuntu-latest
    env:
      SHOPIFY_ADMIN_TOKEN: ${{ secrets.SHOPIFY_ADMIN_TOKEN }}
      SHOPIFY_STORE: ${{ secrets.SHOPIFY_STORE }}
    steps:
      - name: Call Admin API (shop infos)
        run: |
          curl -s -H "X-Shopify-Access-Token: $SHOPIFY_ADMIN_TOKEN" \
            "https://${SHOPIFY_STORE}/admin/api/2025-07/shop.json" | jq .

  # === [OPTION] Backup du thème avant déploiement =================
  theme-backup:
    needs: api-admin
    runs-on: ubuntu-latest
    if: ${{ secrets.ENABLE_THEME_BACKUP == 'true' && !(github.event_name == 'workflow_dispatch' && inputs.deploy_only == true) }}
    env:
      SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE }}
      SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
      THEME_ID: ${{ secrets.THEME_ID }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Shopify CLI
        run: npm i -g @shopify/cli @shopify/theme
      - name: Create dated backup
        run: |
          [ -n "${THEME_ID:-}" ] || { echo "❌ THEME_ID manquant"; exit 1; }
          BACKUP_NAME="backup-$(date +'%Y%m%d-%H%M%S')"
          echo "➡️ Backup du thème $THEME_ID → $BACKUP_NAME"
          shopify theme pull --theme-id "$THEME_ID" --path "$BACKUP_NAME"
          echo "✅ Backup OK : $BACKUP_NAME"
      - name: Upload backup as artifact
        uses: actions/upload-artifact@v4
        with:
          name: theme-backup-${{ env.THEME_ID }}
          path: ${{ github.workspace }}/$BACKUP_NAME

  # === Déploiement auto (deux chemins selon backup activé) ===
  theme-deploy-direct:
    needs: api-admin
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && secrets.ENABLE_THEME_DEPLOY == 'true' && secrets.ENABLE_THEME_BACKUP != 'true' && !(github.event_name == 'workflow_dispatch' && inputs.deploy_only == true) }}
    env:
      SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE }}
      SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
      THEME_ID: ${{ secrets.THEME_ID }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Shopify CLI
        run: npm i -g @shopify/cli @shopify/theme
      - name: Push theme (direct)
        run: shopify theme push --theme-id "$THEME_ID" --force

  theme-deploy-after-backup:
    needs: theme-backup
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && secrets.ENABLE_THEME_DEPLOY == 'true' && secrets.ENABLE_THEME_BACKUP == 'true' && !(github.event_name == 'workflow_dispatch' && inputs.deploy_only == true) }}
    env:
      SHOPIFY_FLAG_STORE: ${{ secrets.SHOPIFY_STORE }}
      SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
      THEME_ID: ${{ secrets.THEME_ID }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Shopify CLI
        run: npm i -g @shopify/cli @shopify/theme
      - name: Push theme (after backup)
        run: shopify theme push --theme-id "$THEME_ID" --force
