#!/usr/bin/env node

// CommonJS copy of analytics-env-injector.js for projects using "type": "module"
const fs = require("fs");
const path = require("path");
try {
  require("dotenv").config();
} catch (e) {
  /* ignore */
}

const CONFIG_MAPPING = {
  GTM_CONTAINER_ID: "gtm_id",
  GA4_MEASUREMENT_ID: "ga4_id",
  GOOGLE_SITE_VERIFICATION: "google_site_verification",
  AHREFS_SITE_VERIFICATION: "ahrefs_site_verification",
  FACEBOOK_PIXEL_ID: "facebook_pixel_id",
  TURNSTILE_SITE_KEY: "turnstile_site_key",
  TURNSTILE_ENABLED: "turnstile_enabled",
  TURNSTILE_THEME: "turnstile_theme",
  TURNSTILE_SIZE: "turnstile_size",
};

function generateConfigSnippet() {
  const envValues = {};
  Object.keys(CONFIG_MAPPING).forEach((envKey) => {
    const envValue = process.env[envKey];
    if (envValue) envValues[CONFIG_MAPPING[envKey]] = envValue;
  });

  let snippet = `{% comment %}\n  Analytics Configuration from Environment Variables\n  Auto-generated by analytics-env-injector.cjs\n{% endcomment %}\n\n<script>\n  window.analyticsEnvConfig = {\n`;
  Object.entries(envValues).forEach(([k, v]) => {
    snippet += `    ${k}: '${String(v).replace(/'/g, "\\'")}',\n`;
  });
  snippet += `  };\n</script>`;
  return snippet;
}

function injectEnvVariables() {
  console.log("ðŸ”§ Injecting env variables...");
  const snippet = generateConfigSnippet();
  const configPath = path.join(
    __dirname,
    "snippets",
    "analytics-config.liquid"
  );
  fs.writeFileSync(configPath, snippet, "utf8");
  console.log("âœ… Wrote", configPath);
}

function validateEnvironment() {
  const errors = [];
  const gtm = process.env.GTM_CONTAINER_ID;
  const ga4 = process.env.GA4_MEASUREMENT_ID;
  const fb = process.env.FACEBOOK_PIXEL_ID;
  if (gtm && !/^GTM-[A-Z0-9]+$/.test(gtm)) errors.push("GTM format invalid");
  if (ga4 && !/^G-[A-Z0-9]+$/.test(ga4)) errors.push("GA4 format invalid");
  if (fb && !/^\d{15,16}$/.test(fb)) errors.push("FB format invalid");
  if (errors.length) {
    console.error(errors.join("\n"));
    process.exit(1);
  }
  console.log("âœ… Env validation OK");
}

const cmd = process.argv[2] || "inject";
if (cmd === "inject") {
  validateEnvironment();
  injectEnvVariables();
} else if (cmd === "validate") {
  validateEnvironment();
} else console.log("Usage: analytics-env-injector.cjs [inject|validate]");
