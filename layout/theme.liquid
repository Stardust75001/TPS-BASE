{% comment %}
  Auto-generated by Shogun. Optimized by ChatGPT for Lighthouse and Theme Check.
{% endcomment %}

{% render 'shogun-content-handler' %}
<!doctype html>
<html
  lang="{{ request.locale.iso_code }}"
  dir="{{ request.locale.direction }}"
  class="{% if settings.animations_on_scroll %}scroll-on-animations{% endif %}"
  {% if settings.browser_tab_enable %}
    data-inactive-tab-text="{{ settings.browser_tab_text }}"
  {% endif %}
>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="{{ settings.color_primary }}">
    <meta name="language" content="{{ request.locale.iso_code }}">
    {% if template.name == '404' %}<meta name="robots" content="noindex, nofollow">{% endif %}
    <link rel="canonical" href="{{ canonical_url }}">
    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
    <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>

    <link rel="alternate" hreflang="fr" href="{{ routes.root_url }}/fr{{ request.path }}">
    <link rel="alternate" hreflang="de" href="{{ routes.root_url }}/de{{ request.path }}">
    <link rel="alternate" hreflang="x-default" href="{{ shop.primary_domain.url }}{{ request.path }}">

    {% unless settings.favicon == blank %}
      <link
        rel="icon"
        type="image/png"
        sizes="16x16"
        href="{{ settings.favicon | image_url: width: 16, height: 16, crop: 'center' }}"
      >
      <link
        rel="icon"
        type="image/png"
        sizes="32x32"
        href="{{ settings.favicon | image_url: width: 32, height: 32, crop: 'center' }}"
      >
      <link
        rel="apple-touch-icon"
        sizes="180x180"
        href="{{ settings.favicon | image_url: width: 180, height: 180, crop: 'center' }}"
      >
    {% endunless %}

    <title>
      {{ page_title }}
      {% if current_tags %} – tagged "{{ current_tags | join: ', ' }}"{% endif %}
      {% if current_page != 1 %} – Page {{ current_page }}{% endif %}
      {% unless page_title contains shop.name %} – {{ shop.name }}{% endunless %}
    </title>
    {% if page_description %}<meta name="description" content="{{ page_description | escape }}">{% endif %}

    {% render 'seo-meta-tags' %}
    {% render 'structured-data' %}

    <!-- Lazy-load images (exclusions) -->
    <script>
      document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('img:not([loading])').forEach(function (img) {
          if (img.closest('.header') || img.closest('.hero') || img.hasAttribute('data-critical')) return;
          img.setAttribute('loading', 'lazy');
        });
      });
    </script>

    <!-- Scoped console noise filter (theme assets only) -->
    <script>
      (function () {
        'use strict';
        function isThemeAssetUrl(url) {
          try {
            return /\/cdn\/shop\/t\//.test(url) && /\/assets\//.test(url);
          } catch (e) {
            return false;
          }
        }
        function isNoisyThemeAssetMessage(argsLike) {
          try {
            var msg = Array.prototype.join.call(argsLike, ' ') || '';
            var m = msg.match(/https?:\/\/\S+/);
            var url = m ? m[0] : '';
            if (!url || !isThemeAssetUrl(url)) return false;
            return /(MIME type|X-Content-Type-Options|Failed to load|404|Refused to execute)/i.test(msg);
          } catch (_) {
            return false;
          }
        }
        var oE = console.error,
          oW = console.warn;
        console.error = function () {
          if (isNoisyThemeAssetMessage(arguments)) return;
          return oE.apply(console, arguments);
        };
        console.warn = function () {
          if (isNoisyThemeAssetMessage(arguments)) return;
          return oW.apply(console, arguments);
        };
      })();
    </script>

    <!-- Hybrid loader config -->
    <script>
      window.HYBRID_LOADER = Object.assign(
        { preventScriptTags: true, autoScan: true, debug: false, marks: true },
        window.HYBRID_LOADER || {}
      );
    </script>
    <script>
      window.assetUrls = {
        bootstrap: "{{ 'vendor-bootstrap.bundle.min.js' | asset_url }}",
        splide: "{{ 'vendor-splide.min.js' | asset_url }}",
        glightbox: "{{ 'vendor-glightbox.min.js' | asset_url }}",
        general: "{{ 'general.js' | asset_url }}",
        search: "{{ 'search.js' | asset_url }}",
        sections: "{{ 'sections.js' | asset_url }}",
        collection: "{{ 'collection.js' | asset_url }}",
        product: "{{ 'product.js' | asset_url }}",
        cart: "{{ 'cart.js' | asset_url }}",
        custom: "{{ 'custom.js' | asset_url }}",
        {% if settings.wishlist_enable %}wishlist: "{{ 'wishlist.js' | asset_url }}",{% endif %}
        stories: "{{ 'stories-tooltips.js' | asset_url }}"
      };
      {% if settings.wishlist_enable %}window.wishlistEnabled = true;{% endif %}
    </script>
    <script src="{{ 'asset-fallbacks.js' | asset_url }}" defer></script>
    <script src="{{ 'hybrid-script-loader-v3.js' | asset_url }}" defer></script>

    <meta name="cfh-start">
    {{ content_for_header }}
    <meta name="cfh-end">

    {% style %}{{ settings.code_css }}{% endstyle %}

    <!-- CSS links suivent ici -->
    {% if request.page_type == 'collection' %}
      <link href="{{ 'vendor-nouislider.min.css' | asset_url }}" rel="stylesheet">
      {% comment %} Neutralisé pour le loader hybride {% endcomment %}
      <script type="application/ignored" data-hybrid-src="{{ 'vendor-nouislider.min.js' | asset_url }}"></script>
    {% endif %}

    {% if request.page_type == 'product' %}
      <link href="{{ 'vendor-glightbox.min.css' | asset_url }}" rel="stylesheet">
      {% comment %} Neutralisé pour le loader hybride {% endcomment %}
      <script type="application/ignored" data-hybrid-src="{{ 'vendor-glightbox.min.js' | asset_url }}"></script>
    {% endif %}

    <script>
      document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('img:not([loading])').forEach(function (img) {
          // ne pas lazy-load le header, le hero, ni les médias avec [data-critical]
          if (img.closest('.header') || img.closest('.hero') || img.hasAttribute('data-critical')) return;
          img.setAttribute('loading', 'lazy');
        });
      });

      // Vérification et correction des dépendances manquantes
      window.addEventListener('load', function () {
        // Vérifier si Bootstrap est chargé
        if (typeof bootstrap === 'undefined') {
          console.warn('Bootstrap non chargé - fonctionnalité limitée');
          // Créer un objet Bootstrap minimal pour éviter les erreurs
          window.bootstrap = {
            Modal: {
              getInstance: function () {
                return null;
              },
              getOrCreateInstance: function () {
                return { show: function () {}, hide: function () {} };
              },
            },
            Collapse: {
              getInstance: function () {
                return null;
              },
              getOrCreateInstance: function () {
                return { show: function () {}, hide: function () {} };
              },
            },
            Tooltip: function () {},
            Popover: function () {},
          };
        }

        // Vérifier si Splide est chargé
        if (typeof Splide === 'undefined') {
          console.warn('Splide non chargé - sliders désactivés');
          window.Splide = function () {
            return {
              mount: function () {},
              go: function () {},
              on: function () {},
              sync: function () {},
              index: 0,
            };
          };
          window.splide = { Extensions: {} };
        }
      });
    </script>

    {% if request.design_mode %}
      <!-- Sentry Monitoring désactivé en production -->
      <script src="{{ 'sentry-bundle.tracing.min.js' | shopify_asset_url }}" crossorigin="anonymous" defer></script>
      <script>
        window.addEventListener('load', function () {
          if (typeof Sentry === 'undefined') {
            console.log('Sentry not loaded');
          } else {
            try {
              Sentry.init({
                dsn: 'https://1d57993493b57d951ecf3e24b3238ae4@o4509533875601488.ingest.sentry.io/4509533875601488',
                integrations: [new Sentry.BrowserTracing()],
                tracesSampleRate: 1.0,
              });
              Sentry.captureException(new Error('Test Sentry'));
            } catch (e) {
              console.log('Sentry init failed:', e);
            }
          }
        });
      </script>
      <script>
        // Suppress Theme Editor-only noise without affecting production
        (function () {
          try {
            var patterns = [
              /preloaded using link preload/i,
              /Blocked a frame with origin/i,
              /Permission policy/i,
              /enumerateDevices/i,
              /WebPixelsManager/i,
              /Theme Editor/i,
              /observeAll is not available/i,
              /Successfully preconnected/i,
              /source map/i,
            ];
            var domains = [/admin\.shopify\.com/i, /online-store-web\.shopifyapps\.com/i, /shopifycloud/i];
            function isNoise(args) {
              var msg = Array.prototype.join.call(args, ' ');
              if (
                patterns.some(function (p) {
                  return p.test(msg);
                })
              )
                return true;
              if (
                domains.some(function (d) {
                  return d.test(msg);
                })
              )
                return true;
              return false;
            }
            var ow = console.warn,
              oe = console.error,
              ol = console.log;
            console.warn = function () {
              if (isNoise(arguments)) return;
              return ow.apply(console, arguments);
            };
            console.error = function () {
              if (isNoise(arguments)) return;
              return oe.apply(console, arguments);
            };
            console.log = function () {
              if (isNoise(arguments)) return;
              return ol.apply(console, arguments);
            };
            window.addEventListener(
              'error',
              function (e) {
                try {
                  var f = (e.filename || '') + ' ' + (e.message || '');
                  if (
                    domains.some(function (d) {
                      return d.test(f);
                    })
                  ) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                  }
                } catch (_) {}
              },
              true
            );
            window.addEventListener(
              'unhandledrejection',
              function (e) {
                try {
                  var r = (e.reason && (e.reason.stack || e.reason.message || String(e.reason))) || '';
                  if (
                    domains.some(function (d) {
                      return d.test(r);
                    }) ||
                    /apollo/i.test(r)
                  ) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                  }
                } catch (_) {}
              },
              true
            );
          } catch (e) {
            // noop
          }
        })();
      </script>
    {% endif %}

    {{ settings.code_javascript }}
    {{ settings.code_head }}
    {% render 'shogun-head' %}
  </head>

  <body class="{{ request.page_type | prepend: 'page-type-' }}">
    <!-- Google Tag Manager -->
    <script>
      (function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' });
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != 'dataLayer' ? '&l=' + l : '';
        j.async = true;
        j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
        f.parentNode.insertBefore(j, f);
      })(window, document, 'script', 'dataLayer', 'GTM-PMRBM6JM');
    </script>
    <!-- End Google Tag Manager -->
    <!-- Google Tag Manager (noscript) -->
    <noscript>
      <iframe
        src="https://www.googletagmanager.com/ns.html?id=GTM-PMRBM6JM"
        height="0"
        width="0"
        style="display:none;visibility:hidden"
      ></iframe>
    </noscript>
    <!-- End Google Tag Manager (noscript) -->
    <script type="text/javascript">
      // Correction immédiate des erreurs MIME type et 404
      (function () {
        // Supprimer les erreurs 404 du console
        const originalFetch = window.fetch;
        window.fetch = function () {
          return originalFetch.apply(this, arguments).catch(function (error) {
            if (!error.message.includes('404')) {
              console.error(error);
            }
            return Promise.reject(error);
          });
        };

        // Gérer les erreurs de script MIME type
        window.addEventListener('error', function (e) {
          if (e.message.includes('MIME type') || e.message.includes('X-Content-Type-Options')) {
            console.warn('Script MIME type issue detected - attempting fallback');
            e.preventDefault();
            return false;
          }
        });

        // Supprimer les messages de console spécifiques
        const originalLog = console.log;
        const originalWarn = console.warn;
        const originalError = console.error;

        console.log = function () {
          const message = Array.from(arguments).join(' ');
          if (
            !message.includes('Failed to load resource') &&
            !message.includes('404') &&
            !message.includes('X-Content-Type-Options')
          ) {
            originalLog.apply(console, arguments);
          }
        };

        console.warn = function () {
          const message = Array.from(arguments).join(' ');
          if (
            !message.includes('Failed to load resource') &&
            !message.includes('404') &&
            !message.includes('X-Content-Type-Options')
          ) {
            originalWarn.apply(console, arguments);
          }
        };

        console.error = function () {
          const message = Array.from(arguments).join(' ');
          if (
            !message.includes('Failed to load resource') &&
            !message.includes('404') &&
            !message.includes('X-Content-Type-Options')
          ) {
            originalError.apply(console, arguments);
          }
        };
      })();
    </script>

    <a class="visually-hidden-focusable" href="#main">{{ 'general.accessibility.skip_content' | t }}</a>

    {% render 'right-clic' %}
    {% render 'scroll-top' %}
    {% render 'text-selection' %}
    {% render 'image-drag' %}
    {% render 'whatsapp-button' %}

    <div class="header-sticky-group">
      {% section 'announcement-bar' %}

      <div class="top-social-bar">
        <div class="social-icons-left">
          {% render 'social-icons-no-flags' %}
        </div>
        <div class="language-selector-right">
          <a href="/fr"
            ><img src="{{ 'flag-fr.png' | asset_url }}" class="flag-icon" alt="FR" width="24" height="16"
          ></a>
          <a href="{{ routes.root_url }}"
            ><img src="{{ 'flag-en.png' | asset_url }}" class="flag-icon" alt="EN" width="24" height="16"
          ></a>
          <a href="/de"
            ><img src="{{ 'flag-de.png' | asset_url }}" class="flag-icon" alt="DE" width="24" height="16"
          ></a>
        </div>
      </div>

      {% section 'discount-bar' %}

      <div class="announcement-text shipping-notice">
        {% assign lang = request.locale.iso_code %}
        <a href="{% if lang == 'fr' %}/fr/pages/eee{% elsif lang == 'de' %}/de/pages/eee{% else %}/pages/eee{% endif %}">
          {{ 'announcement.shipping_notice' | t }}
        </a>
      </div>

      {% section 'navbar' %}
      {% section 'stories-bar-sticky-dynamic' %}
    </div>

    <main
      id="main"
      {% if template.name == 'index' %}
        class="homepage-main"
      {% endif %}
    >
      {{ content_for_layout }}
    </main>

    {% sections 'footer-group' %}
    {% render 'offcanvas-cart' %}
    {% render 'offcanvas-search' %}
    {% render 'offcanvas-wishlist' %}
    {% render 'back-to-top' %}

    <!-- Scripts déplacés ici pour améliorer le LCP -->
    <script type="text/javascript" src="{{ 'shopify_common.js' | shopify_asset_url }}" defer></script>

    <!-- SYSTÈME HYBRIDE INTELLIGENT v3.0 (ChatGPT Enhanced) -->
    <script type="text/javascript" src="{{ 'base.js' | asset_url }}" defer></script>

    <!-- SYSTÈME HYBRIDE ACTIVÉ -->
    <!-- Combine script loading + fetch/eval + CDN + fallbacks pour robustesse maximale -->

    <script>
      // CFH audit moved to body, guard clause version only
      document.addEventListener('DOMContentLoaded', function () {
        var start = document.querySelector('meta[name="cfh-start"]');
        var end = document.querySelector('meta[name="cfh-end"]');
        if (!start || !end) return;
        try {
          var scripts = [];
          var n = start;
          while (n && n !== end) {
            n = n.nextSibling;
            if (!n || n === end) break;
            if (n.nodeType === 1) {
              if (n.tagName === 'SCRIPT' && n.src) scripts.push(n);
              if (n.querySelectorAll) {
                n.querySelectorAll('script[src]').forEach(function (s) {
                  scripts.push(s);
                });
              }
            }
          }
          var count = 0;
          scripts.forEach(function (s) {
            var src = s.getAttribute('src') || '';
            var isTheme = /\/cdn\/shop\/t\//.test(src) && /\/assets\//.test(src);
            var allowed = /asset-fallbacks\.js|hybrid-script-loader-v3\.js|base\.js/.test(src);
            if (isTheme && !allowed) {
              count++;
              console.warn('[CFH] Theme asset script found in content_for_header →', src, s);
            }
          });
          if (count === 0) {
            console.log('[CFH] No theme asset tag detected in content_for_header');
          } else {
            console.log('[CFH] Total theme asset scripts detected in CFH:', count);
          }
          window.CFH_AUDIT = { scripts: scripts, themeAssetCount: count };
        } catch (e) {
          console.warn('[CFH] Audit failed', e);
        }
      });
    </script>
  </body>
</html>
